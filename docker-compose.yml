services:
  # API Gateway service
  gateway:
    build: .
    container_name: shortlink-gateway
    ports:
      - "8080:8080"
    environment:
      - SHORTLINK_PORT=8080
      - SHORTLINK_ENV=local
      - SHORTLINK_OTEL_EXPORTER_OTLP_ENDPOINT=tempo:4318
      - SHORTLINK_TRACES_ENDPOINT=tempo:4318
      - SHORTLINK_METRICS_ENDPOINT=prometheus:9090
      - SHORTLINK_GRPC_SERVER_ADDR=shortlink-core:50051
      - SHORTLINK_USE_GRPC=true
    depends_on:
      - tempo
      - prometheus
    networks:
      - shortlink-network
    restart: unless-stopped

  # Observability services
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    ports:
      - "4318:4318" # OTLP gRPC port
      - "3200:3200" # query api port
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo/tempo.yaml:/etc/tempo.yaml
    networks:
      - shortlink-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - shortlink-network

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - tempo
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana-storage:/var/lib/grafana
    networks:
      - shortlink-network

networks:
  shortlink-network:
    external: true
    name: shortlink-core_shortlink-network

volumes:
  grafana-storage:
  prometheus-data:
